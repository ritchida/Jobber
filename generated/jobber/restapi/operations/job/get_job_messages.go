package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-swagger/go-swagger/httpkit/middleware"
)

// GetJobMessagesHandlerFunc turns a function with the right signature into a get job messages handler
type GetJobMessagesHandlerFunc func(GetJobMessagesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetJobMessagesHandlerFunc) Handle(params GetJobMessagesParams) middleware.Responder {
	return fn(params)
}

// GetJobMessagesHandler interface for that can handle valid get job messages params
type GetJobMessagesHandler interface {
	Handle(GetJobMessagesParams) middleware.Responder
}

// NewGetJobMessages creates a new http.Handler for the get job messages operation
func NewGetJobMessages(ctx *middleware.Context, handler GetJobMessagesHandler) *GetJobMessages {
	return &GetJobMessages{Context: ctx, Handler: handler}
}

/*GetJobMessages swagger:route GET /v1/jobs/{id}/messages job getJobMessages

GetJobMessages get job messages API

*/
type GetJobMessages struct {
	Context *middleware.Context
	Handler GetJobMessagesHandler
}

func (o *GetJobMessages) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetJobMessagesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

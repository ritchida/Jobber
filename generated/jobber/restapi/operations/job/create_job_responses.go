package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/ritchida/jobber/generated/jobber/models"
)

/*CreateJobAccepted Accepted

swagger:response createJobAccepted
*/
type CreateJobAccepted struct {

	// In: body
	Payload models.ID `json:"body,omitempty"`
}

// NewCreateJobAccepted creates CreateJobAccepted with default headers values
func NewCreateJobAccepted() *CreateJobAccepted {
	return &CreateJobAccepted{}
}

// WithPayload adds the payload to the create job accepted response
func (o *CreateJobAccepted) WithPayload(payload models.ID) *CreateJobAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create job accepted response
func (o *CreateJobAccepted) SetPayload(payload models.ID) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateJobAccepted) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(202)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*CreateJobDefault Error

swagger:response createJobDefault
*/
type CreateJobDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateJobDefault creates CreateJobDefault with default headers values
func NewCreateJobDefault(code int) *CreateJobDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateJobDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create job default response
func (o *CreateJobDefault) WithStatusCode(code int) *CreateJobDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create job default response
func (o *CreateJobDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create job default response
func (o *CreateJobDefault) WithPayload(payload *models.Error) *CreateJobDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create job default response
func (o *CreateJobDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateJobDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

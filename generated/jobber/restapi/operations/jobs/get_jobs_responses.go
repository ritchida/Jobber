package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/ritchida/jobber/generated/jobber/models"
)

/*GetJobsOK list of jobs

swagger:response getJobsOK
*/
type GetJobsOK struct {

	// In: body
	Payload []*models.Job `json:"body,omitempty"`
}

// NewGetJobsOK creates GetJobsOK with default headers values
func NewGetJobsOK() *GetJobsOK {
	return &GetJobsOK{}
}

// WithPayload adds the payload to the get jobs o k response
func (o *GetJobsOK) WithPayload(payload []*models.Job) *GetJobsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get jobs o k response
func (o *GetJobsOK) SetPayload(payload []*models.Job) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobsOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetJobsDefault Error

swagger:response getJobsDefault
*/
type GetJobsDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetJobsDefault creates GetJobsDefault with default headers values
func NewGetJobsDefault(code int) *GetJobsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetJobsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get jobs default response
func (o *GetJobsDefault) WithStatusCode(code int) *GetJobsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get jobs default response
func (o *GetJobsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get jobs default response
func (o *GetJobsDefault) WithPayload(payload *models.Error) *GetJobsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get jobs default response
func (o *GetJobsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobsDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

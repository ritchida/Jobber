package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	httptransport "github.com/go-swagger/go-swagger/httpkit/client"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/ritchida/jobber/generated/jobber-client/client/job"
	"github.com/ritchida/jobber/generated/jobber-client/client/jobs"
)

// Default jobber HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new jobber HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Jobber {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("localhost", "/", []string{"http"})
	return New(transport, formats)
}

// New creates a new jobber client
func New(transport client.Transport, formats strfmt.Registry) *Jobber {
	cli := new(Jobber)
	cli.Transport = transport

	cli.Job = job.New(transport, formats)

	cli.Jobs = jobs.New(transport, formats)

	return cli
}

// Jobber is a client for jobber
type Jobber struct {
	Job *job.Client

	Jobs *jobs.Client

	Transport client.Transport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Jobber) SetTransport(transport client.Transport) {
	c.Transport = transport

	c.Job.SetTransport(transport)

	c.Jobs.SetTransport(transport)

}

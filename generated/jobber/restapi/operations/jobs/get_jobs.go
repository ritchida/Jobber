package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-swagger/go-swagger/httpkit/middleware"
)

// GetJobsHandlerFunc turns a function with the right signature into a get jobs handler
type GetJobsHandlerFunc func(GetJobsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetJobsHandlerFunc) Handle(params GetJobsParams) middleware.Responder {
	return fn(params)
}

// GetJobsHandler interface for that can handle valid get jobs params
type GetJobsHandler interface {
	Handle(GetJobsParams) middleware.Responder
}

// NewGetJobs creates a new http.Handler for the get jobs operation
func NewGetJobs(ctx *middleware.Context, handler GetJobsHandler) *GetJobs {
	return &GetJobs{Context: ctx, Handler: handler}
}

/*GetJobs swagger:route GET /v1/jobs jobs getJobs

GetJobs get jobs API

*/
type GetJobs struct {
	Context *middleware.Context
	Handler GetJobsHandler
}

func (o *GetJobs) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetJobsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

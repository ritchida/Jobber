package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-swagger/go-swagger/httpkit/middleware"
)

// DeleteJobHandlerFunc turns a function with the right signature into a delete job handler
type DeleteJobHandlerFunc func(DeleteJobParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteJobHandlerFunc) Handle(params DeleteJobParams) middleware.Responder {
	return fn(params)
}

// DeleteJobHandler interface for that can handle valid delete job params
type DeleteJobHandler interface {
	Handle(DeleteJobParams) middleware.Responder
}

// NewDeleteJob creates a new http.Handler for the delete job operation
func NewDeleteJob(ctx *middleware.Context, handler DeleteJobHandler) *DeleteJob {
	return &DeleteJob{Context: ctx, Handler: handler}
}

/*DeleteJob swagger:route DELETE /v1/jobs/{id} job deleteJob

Deletes a job specified by ID

*/
type DeleteJob struct {
	Context *middleware.Context
	Handler DeleteJobHandler
}

func (o *DeleteJob) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDeleteJobParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

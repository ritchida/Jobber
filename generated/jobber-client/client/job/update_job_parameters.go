package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/ritchida/jobber/generated/jobber-client/models"
)

// NewUpdateJobParams creates a new UpdateJobParams object
// with the default values initialized.
func NewUpdateJobParams() *UpdateJobParams {
	var ()
	return &UpdateJobParams{}
}

/*UpdateJobParams contains all the parameters to send to the API endpoint
for the update job operation typically these are written to a http.Request
*/
type UpdateJobParams struct {

	/*ID*/
	ID string
	/*Status
	  Updates an existing service instance

	*/
	Status models.JobStatus
}

// WithID adds the id to the update job params
func (o *UpdateJobParams) WithID(id string) *UpdateJobParams {
	o.ID = id
	return o
}

// WithStatus adds the status to the update job params
func (o *UpdateJobParams) WithStatus(status models.JobStatus) *UpdateJobParams {
	o.Status = status
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateJobParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Status); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
